{"version":3,"sources":["webpack:///./js/refs.js","webpack:///./index.js","webpack:///./js/notifications.js"],"names":["form","document","querySelector","submitButton","table","changeRadio","refs","elements","teammate","forEach","t","disabled","parseLocalSrorage","values","key","localStorage","hasOwnProperty","length","value","JSON","parse","getItem","push","meetingName","meetingDay","meetingTime","console","log","markup","tableCell","insertAdjacentHTML","classList","add","addEventListener","event","formElement","newEvent","meeting","day","time","teammateList","team","c","checked","newMeeting","meetingMembers","err","error","text","delay","preventDefault","setItem","uuidv4","stringify"],"mappings":"oIAAe,GACbA,KAAMC,SAASC,cAAc,YAC7BC,aAAcF,SAASC,cAAc,kBACrCE,MAAOH,SAASC,cAAc,U,4CCqDhC,SAASG,IACPC,EAAKN,KAAKO,SAASC,SAASC,SAAQ,SAAAC,GAAC,OAAKA,EAAEC,UAAYD,EAAEC,YAG5D,SAASC,IACP,IAAMC,EAAS,GACf,IAAK,IAAIC,KAAOC,aACd,GAAKA,aAAaC,eAAeF,IAAuB,KAAfA,EAAIG,OAA7C,CAGA,IAAMC,EAAQC,KAAKC,MAAML,aAAaM,QAAQP,IAC9CD,EAAOS,KAAKJ,GAEd,OAAOL,EAhETD,IAAoBH,SAAQ,YAA8C,IAA3Cc,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAEtD,GADAC,QAAQC,IAAIJ,EAAaC,EAAYC,GACjCnB,EAAKF,MAAO,CACd,IAAMwB,EAAS,SAASL,EAAZ,2DACNM,EAAYvB,EAAKF,MAAMF,cAAX,eACDuB,EADC,oBAC6BD,EAD7B,MAGlBK,EAAUC,mBAAmB,YAAaF,GAC1CC,EAAUE,UAAUC,IAAI,oBAIxB1B,EAAKN,OACPM,EAAKH,aAAa8B,iBAAiB,SAKrC,SAAoBC,GAClB,IAAMC,EAAc7B,EAAKN,KAAKO,SACxB6B,EAAWD,EAAYE,QAAQnB,MAC/BoB,EAAMH,EAAYG,IAAIpB,MACtBqB,EAAOJ,EAAYI,KAAKrB,MACxBsB,EAAe,GACU,gBAA3BL,EAAYM,KAAKvB,MACnBsB,EAAalB,KAAKa,EAAYM,KAAKvB,OAEnCiB,EAAY3B,SAASC,SAAQ,SAAAiC,GACvBA,EAAEC,SACJH,EAAalB,KAAKoB,EAAExB,UAI1B,IAAM0B,EAAa,CACjBrB,YAAaa,EACbZ,WAAYc,EACZb,YAAac,EACbM,eAAgBL,GAEdM,GAAM,EACVlC,IAAoBH,SAAQ,YAAiC,IAA9Be,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACrCD,IAAec,GAAOb,IAAgBc,ICzC5CQ,gBAAM,CACJC,KAAM,0DACNC,MAAO,MDyCLH,GAAM,GAERZ,EAAMgB,oBAGHJ,GAAK/B,aAAaoC,QAAQC,cAAUjC,KAAKkC,UAAUT,OAlCxDtC,EAAKN,KAAKE,cAAc,WAAW+B,iBAAiB,SAAU5B,GAC9DC,EAAKN,KAAKE,cAAc,WAAW+B,iBAAiB,SAAU5B,K","file":"main.38ca2bba22a3f00292b4.js","sourcesContent":["export default {\r\n  form: document.querySelector('.js-form'),\r\n  submitButton: document.querySelector('.button-submit'),\r\n  table: document.querySelector('table'),\r\n};\r\n","import './sass/styles.scss';\r\nimport refs from './js/refs';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport timeSlotIsBookedError from './js/notifications';\r\n\r\nparseLocalSrorage().forEach(({ meetingName, meetingDay, meetingTime }) => {\r\n  console.log(meetingName, meetingDay, meetingTime);\r\n  if (refs.table) {\r\n    const markup = `<span>${meetingName}</span><button class=\"btn-close\" type=\"button\"></button>`;\r\n    const tableCell = refs.table.querySelector(\r\n      `[data-time='${meetingTime}'] > [data-day=\"${meetingDay}\"]`,\r\n    );\r\n    tableCell.insertAdjacentHTML('beforeend', markup);\r\n    tableCell.classList.add('active-event');\r\n  }\r\n});\r\n\r\nif (refs.form) {\r\n  refs.submitButton.addEventListener('click', submitForm);\r\n  refs.form.querySelector('#radio1').addEventListener('change', changeRadio);\r\n  refs.form.querySelector('#radio2').addEventListener('change', changeRadio);\r\n}\r\n\r\nfunction submitForm(event) {\r\n  const formElement = refs.form.elements;\r\n  const newEvent = formElement.meeting.value;\r\n  const day = formElement.day.value;\r\n  const time = formElement.time.value;\r\n  const teammateList = [];\r\n  if (formElement.team.value === 'all-members') {\r\n    teammateList.push(formElement.team.value);\r\n  } else {\r\n    formElement.teammate.forEach(c => {\r\n      if (c.checked) {\r\n        teammateList.push(c.value);\r\n      }\r\n    });\r\n  }\r\n  const newMeeting = {\r\n    meetingName: newEvent,\r\n    meetingDay: day,\r\n    meetingTime: time,\r\n    meetingMembers: teammateList,\r\n  };\r\n  let err = false;\r\n  parseLocalSrorage().forEach(({ meetingDay, meetingTime }) => {\r\n    if (meetingDay === day && meetingTime === time) {\r\n      timeSlotIsBookedError();\r\n      err = true;\r\n    }\r\n    event.preventDefault();\r\n    return;\r\n  });\r\n  if (!err) localStorage.setItem(uuidv4(), JSON.stringify(newMeeting));\r\n}\r\n\r\nfunction changeRadio() {\r\n  refs.form.elements.teammate.forEach(t => (t.disabled = !t.disabled));\r\n}\r\n\r\nfunction parseLocalSrorage() {\r\n  const values = [];\r\n  for (let key in localStorage) {\r\n    if (!localStorage.hasOwnProperty(key) || key.length !== 36) {\r\n      continue;\r\n    }\r\n    const value = JSON.parse(localStorage.getItem(key));\r\n    values.push(value);\r\n  }\r\n  return values;\r\n}\r\n","import { error } from '@pnotify/core/dist/PNotify.js';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\n\r\nexport default function timeSlotIsBookedError() {\r\n  error({\r\n    text: 'Failed to create an event. Time slot is already booked.',\r\n    delay: 3000,\r\n  });\r\n}\r\n"],"sourceRoot":""}